spring.application.name=order-service

# Database configuration
spring.datasource.url=jdbc:postgresql://ep-aged-hill-a1uo9k1a-pooler.ap-southeast-1.aws.neon.tech/neondb?user=neondb_owner&password=npg_7RjYqSCL6yFr&sslmode=require&channelBinding=require
spring.datasource.driver-class-name=org.postgresql.Driver
spring.jpa.hibernate.ddl-auto=update


# Kafka configuration
spring.kafka.bootstrap-servers=localhost:9092

spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.springframework.kafka.support.serializer.JsonSerializer
spring.kafka.producer.properties.spring.json.add.type.headers=false

spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer=org.springframework.kafka.support.serializer.ErrorHandlingDeserializer

spring.kafka.consumer.properties.spring.deserializer.value.delegate.class=org.springframework.kafka.support.serializer.JsonDeserializer
spring.kafka.consumer.properties.spring.json.value.default.type=rtscmapp.orderservice.model.IOrder
spring.kafka.consumer.properties.spring.json.trusted.packages=*

server.port=8090
